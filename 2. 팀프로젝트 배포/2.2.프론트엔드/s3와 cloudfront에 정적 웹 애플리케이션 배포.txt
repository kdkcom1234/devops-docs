-- s3에 vue 앱 배포

. s3 버킷 생성 및 객체 퍼블릭화가 가능하도록 설정
  - 속성에서 웹호스팅 설정 및 기본/에러 페이지 index.html

. aws cli 설정 
  - aws configure (key, secret 등등)
    ** key secret의 aws IAM에 보안 자격 증명에서 확인 가능

. vue-cli-plugin-s3-deploy 설치
  - npm add vue-cli-plugin-s3-deploy

. 배포 설정 초기화
  - vue invoke s3-deploy

. 빌드 및 S3에 배포
  - npm run build
  - npm run deploy

. 버킷의 웹호스팅 주소로 들어가서 접근 가능한지 확인



http://kdk-mybucket.s3-website.ap-northeast-2.amazonaws.com

V

https://d6uqq5yoemquj.cloudfront.net


-- cloudfront로 정적 컨텐츠 배포
  CDN 서비스: https://ko.wikipedia.org/wiki/%EC%BD%98%ED%85%90%EC%B8%A0_%EC%A0%84%EC%86%A1_%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC
. 배포 생성
  - Create Distribution > Web
  - Origin Domain Name: S3 버킷 주소
  - Price Class: Use ... Asia
  - Default Root Object: index.html

. 배포 옵션 변경
  - Distribution Settings
  - Error Pages에 404, 403 에러페이지 추가
    ** vue router에 history 모드를 사용하기 위함
  - Create Custom Error Response: 404와 403코드 두개를 만듦
    > Error Code: 404 403
    > Customize Error Response: Yes
    > Response Page Path: /index.html
    > HTTP Response Code: 200


-- CloudFront에 S3컨텐츠 변경사항 강제로 반영하기

** S3 컨텐츠가 변경되었을 때 CloudFront에 반영되는 기본시간은 1일
   Default TTL = 86400

** vue cli로 빌드 할때마다 css, js는 이름이 변동되어 무관하지만
   index.html은 파일명이 고정이므로 CloudFront에 수동으로 반영 필요

. CloudFront에 S3 객체를 무효화하여 S3의 객체를 다시 받아오도록 함
  - Distribution Settings > Invalidations(무효화)
  - Create Invalidation
  - /index.html 입력하고 Invalidate 클릭
                  